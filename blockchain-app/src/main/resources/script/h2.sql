-- Drop table

-- DROP TABLE PUBLIC.T_BLOCK IF EXISTS;
--
-- CREATE TABLE PUBLIC.T_BLOCK (
-- 	ID INTEGER DEFAULT NOT NULL AUTO_INCREMENT,
-- 	HEIGHT INTEGER NOT NULL,
-- 	DATA VARCHAR(10000000) NOT NULL,
-- 	BLOCK_HASH VARCHAR(64) NOT NULL,
-- 	CONSTRAINT T_BLOCK_PK PRIMARY KEY (ID)
-- ) ;
-- CREATE UNIQUE INDEX T_BLOCK_BLOCK_HASH_IDX ON PUBLIC.T_BLOCK (BLOCK_HASH) ;
-- CREATE INDEX T_BLOCK_HEIGHT_IDX ON PUBLIC.T_BLOCK (HEIGHT) ;


-- Drop table

DROP TABLE PUBLIC.T_BLOCK_INDEX IF EXISTS;

CREATE TABLE PUBLIC.T_BLOCK_INDEX (
	ID INTEGER DEFAULT NOT NULL AUTO_INCREMENT,
	BLOCK_HASH VARCHAR(64) NOT NULL,
	HEIGHT INTEGER NOT NULL,
	IS_BEST INTEGER NOT NULL,
	MINER_ADDRESS VARCHAR(34) NOT NULL,
	CONSTRAINT T_BLOCK_INDEX_PK PRIMARY KEY (ID)
) ;
CREATE UNIQUE INDEX T_BLOCK_INDEX_BLOCK_HASH_IDX ON PUBLIC.T_BLOCK_INDEX (BLOCK_HASH) ;
CREATE INDEX T_BLOCK_INDEX_HEIGHT_IDX ON PUBLIC.T_BLOCK_INDEX (HEIGHT) ;
CREATE INDEX T_BLOCK_INDEX_MINER_ADDRESS_IDX ON PUBLIC.T_BLOCK_INDEX (MINER_ADDRESS) ;

-- Drop table

DROP TABLE PUBLIC.T_DPOS IF EXISTS;

CREATE TABLE PUBLIC.T_DPOS (
	ID INTEGER DEFAULT NOT NULL AUTO_INCREMENT,
	ADDRESSES VARCHAR(2000),
	SN INTEGER NOT NULL,
	CONSTRAINT T_DPOS_PK PRIMARY KEY (ID)
) ;
CREATE UNIQUE INDEX T_DPOS_SN_IDX ON PUBLIC.T_DPOS (SN) ;

-- Drop table

DROP TABLE PUBLIC.T_SCORE IF EXISTS;

CREATE TABLE PUBLIC.T_SCORE (
	ID INTEGER DEFAULT NOT NULL AUTO_INCREMENT,
	ADDRESS VARCHAR(34) NOT NULL,
	SCORE INTEGER NOT NULL,
	CONSTRAINT T_SCORE_PK PRIMARY KEY (ID)
) ;
CREATE INDEX T_SCORE_ADDRESS_IDX ON PUBLIC.T_SCORE (ADDRESS) ;

-- Drop table

-- DROP TABLE PUBLIC.T_SPENT_TRANSACTION_OUT_INDEX IF EXISTS;
--
-- CREATE TABLE PUBLIC.T_SPENT_TRANSACTION_OUT_INDEX (
-- 	ID INTEGER DEFAULT NOT NULL AUTO_INCREMENT,
-- 	NOW_TRANSACTION_HASH VARCHAR(64) NOT NULL,
-- 	OUT_INDEX INTEGER NOT NULL,
-- 	PRE_TRANSACTION_HASH VARCHAR(64) NOT NULL,
-- 	CONSTRAINT T_SPENT_TRANSACTION_OUT_INDEX_PK PRIMARY KEY (ID)
-- ) ;
-- CREATE INDEX T_SPENT_TRANSACTION_OUT_INDEX_NOW_TRANSACTION_HASH_IDX ON PUBLIC.T_SPENT_TRANSACTION_OUT_INDEX (NOW_TRANSACTION_HASH) ;
-- CREATE INDEX T_SPENT_TRANSACTION_OUT_INDEX_PRE_TRANSACTION_HASH_IDX ON PUBLIC.T_SPENT_TRANSACTION_OUT_INDEX (PRE_TRANSACTION_HASH) ;

-- Drop table

DROP TABLE PUBLIC.T_TRANSACTION_INDEX IF EXISTS;

CREATE TABLE PUBLIC.T_TRANSACTION_INDEX (
	ID INTEGER DEFAULT NOT NULL AUTO_INCREMENT,
	BLOCK_HASH VARCHAR(64) NOT NULL,
	TRANSACTION_HASH VARCHAR(64) NOT NULL,
	TRANSACTION_INDEX INTEGER NOT NULL,
	CONSTRAINT T_TRANSACTION_INDEX_PK PRIMARY KEY (ID)
) ;
CREATE UNIQUE INDEX T_TRANSACTION_INDEX_TRANSACTION_HASH_IDX ON PUBLIC.T_TRANSACTION_INDEX (TRANSACTION_HASH) ;

-- Drop table

DROP TABLE PUBLIC.T_UTXO IF EXISTS;

CREATE TABLE PUBLIC.T_UTXO (
	ID INTEGER DEFAULT NOT NULL AUTO_INCREMENT,
	AMOUNT VARCHAR(50) NOT NULL,
	CURRENCY VARCHAR(20) NOT NULL,
	LOCK_SCRIPT VARCHAR(1000) NOT NULL,
	OUT_INDEX INTEGER NOT NULL,
	SCRIPT_TYPE INTEGER NOT NULL,
	TRANSACTION_HASH VARCHAR(64) NOT NULL,
	CONSTRAINT T_UTXO_PK PRIMARY KEY (ID)
) ;
CREATE UNIQUE INDEX T_UTXO_TRANSACTION_HASH_IDX ON PUBLIC.T_UTXO (TRANSACTION_HASH,OUT_INDEX) ;
CREATE INDEX T_UTXO_LOCK_SCRIPT_IDX ON PUBLIC.T_UTXO (LOCK_SCRIPT,CURRENCY) ;

-- Drop table

DROP TABLE PUBLIC.T_WITNESS IF EXISTS;

CREATE TABLE PUBLIC.T_WITNESS (
	ID INTEGER DEFAULT NOT NULL AUTO_INCREMENT,
	ADDRESS VARCHAR(50) NOT NULL,
	HTTP_PORT INTEGER NOT NULL,
	PUB_KEY VARCHAR(66) NOT NULL,
	SOCKET_PORT INTEGER NOT NULL,
	CONSTRAINT T_WITNESS_PK PRIMARY KEY (ID)
) ;
CREATE UNIQUE INDEX T_WITNESS_PUB_KEY_IDX ON PUBLIC.T_WITNESS (PUB_KEY) ;
